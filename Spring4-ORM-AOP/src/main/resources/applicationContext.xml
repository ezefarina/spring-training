<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	                   http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">


    <context:component-scan base-package="org.ezefarina.spring.dao,org.ezefarina.spring.service"/>

    <bean id="logging" class="org.ezefarina.spring.aspects.Logging" scope="singleton"/>
    <bean id="validation" class="org.ezefarina.spring.aspects.Validation" scope="singleton"/>

    <aop:config>
        <aop:aspect ref="logging">
            <aop:pointcut id="savePointCut" expression="execution( public * org.ezefarina.spring.dao.*.save(..))"/>
            <aop:before pointcut-ref="savePointCut" method="logParameters"/>
            <aop:after-returning pointcut-ref="savePointCut" method="logReturnValue" returning="returnedValue"/>
            <aop:after-throwing pointcut-ref="savePointCut" method="logException" throwing="ex"/>
        </aop:aspect>

        <aop:aspect ref="validation">
            <aop:around pointcut-ref="savePointCut" method="isNotNull"/>
        </aop:aspect>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost/lp20"/>
        <property name="username" value="postgres"/>
        <property name="password" value="postgres"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <property name="packagesToScan" value="org.ezefarina.spring.entities"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="get*" read-only="true" isolation="READ_COMMITTED"/>-->
    <!--<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" timeout="-1" />-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
    <!--<aop:pointcut id="personServiceOperation"-->
    <!--expression="execution(* org.ezefarina.spring.dao.*.*(..))" />-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="personServiceOperation" />-->
    <!--</aop:config>-->

</beans>
